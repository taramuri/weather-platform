{"ast":null,"code":"var _jsxFileName = \"D:\\\\3KNU\\\\kursova\\\\weather-agriculture-app\\\\client\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box, Button, Card, CardContent, CardHeader, Container, Grid, TextField, Typography, CircularProgress, useTheme } from '@mui/material';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport { WbSunny as SunIcon, CloudCircle as CloudIcon, Water as WaterIcon, Air as WindIcon } from '@mui/icons-material';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const theme = useTheme();\n  const [city, setCity] = useState('Київ');\n  const [searchCity, setSearchCity] = useState('Київ');\n  const [currentWeather, setCurrentWeather] = useState(null);\n  const [forecast, setForecast] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const detectLocation = () => {\n    if (\"geolocation\" in navigator) {\n      navigator.geolocation.getCurrentPosition(async position => {\n        try {\n          const response = await fetch(`https://nominatim.openstreetmap.org/reverse?format=json&lat=${position.coords.latitude}&lon=${position.coords.longitude}&zoom=10&addressdetails=1`);\n          const data = await response.json();\n          const detectedCity = data.address.city || data.address.town || data.address.village || 'Київ';\n          setCity(detectedCity);\n          setSearchCity(detectedCity);\n        } catch (err) {\n          console.error('Помилка визначення міста:', err);\n        }\n      });\n    }\n  };\n  const fetchWeatherData = async () => {\n    setLoading(true);\n    setError('');\n    try {\n      const weatherResponse = await fetch(`http://localhost:5000/api/weather/current/${searchCity}`);\n      const forecastResponse = await fetch(`http://localhost:5000/api/weather/forecast/${searchCity}`);\n      if (!weatherResponse.ok || !forecastResponse.ok) {\n        throw new Error('Помилка отримання даних');\n      }\n      const weatherData = await weatherResponse.json();\n      const forecastData = await forecastResponse.json();\n      setCurrentWeather(weatherData);\n      setForecast(forecastData);\n      setCity(searchCity);\n      setLoading(false);\n    } catch (err) {\n      console.error('Помилка:', err);\n      setError(err.message || 'Помилка отримання даних погоди');\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    detectLocation();\n    fetchWeatherData();\n  }, []);\n  const getWeatherIcon = temp => {\n    if (temp < 10) return /*#__PURE__*/_jsxDEV(CloudIcon, {\n      color: \"secondary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 27\n    }, this);\n    if (temp > 25) return /*#__PURE__*/_jsxDEV(SunIcon, {\n      color: \"warning\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 27\n    }, this);\n    return /*#__PURE__*/_jsxDEV(CloudIcon, {\n      color: \"primary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 12\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"xl\",\n    sx: {\n      py: 4,\n      backgroundColor: theme.palette.background.default\n    },\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          elevation: 6,\n          sx: {\n            backgroundColor: theme.palette.background.paper,\n            borderRadius: 2\n          },\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              gap: 2,\n              alignItems: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                label: \"\\u0412\\u0432\\u0435\\u0434\\u0456\\u0442\\u044C \\u043C\\u0456\\u0441\\u0442\\u043E\",\n                value: searchCity,\n                onChange: e => setSearchCity(e.target.value),\n                fullWidth: true,\n                variant: \"outlined\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                color: \"primary\",\n                onClick: fetchWeatherData,\n                disabled: loading,\n                sx: {\n                  height: '56px'\n                },\n                children: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n                  size: 24\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 30\n                }, this) : 'Пошук'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        display: \"flex\",\n        justifyContent: \"center\",\n        children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          elevation: 6,\n          sx: {\n            backgroundColor: theme.palette.error.light\n          },\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              color: \"error\",\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this) : currentWeather && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            elevation: 6,\n            sx: {\n              height: '100%',\n              backgroundColor: theme.palette.background.paper\n            },\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              title: `Погода в ${city}`,\n              avatar: getWeatherIcon(currentWeather.temperature)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                display: \"flex\",\n                alignItems: \"center\",\n                gap: 2,\n                mb: 2,\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h4\",\n                  children: [currentWeather.temperature, \"\\xB0C\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                display: \"flex\",\n                alignItems: \"center\",\n                gap: 2,\n                mb: 1,\n                children: [/*#__PURE__*/_jsxDEV(WaterIcon, {\n                  color: \"primary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  children: [\"\\u0412\\u043E\\u043B\\u043E\\u0433\\u0456\\u0441\\u0442\\u044C: \", currentWeather.humidity, \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                display: \"flex\",\n                alignItems: \"center\",\n                gap: 2,\n                children: [/*#__PURE__*/_jsxDEV(WindIcon, {\n                  color: \"secondary\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  children: [\"\\u0412\\u0456\\u0442\\u0435\\u0440: \", currentWeather.windSpeed, \" \\u043A\\u043C/\\u0433\\u043E\\u0434\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 8,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            elevation: 6,\n            sx: {\n              height: '100%',\n              backgroundColor: theme.palette.background.paper\n            },\n            children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n              title: \"\\u041F\\u0440\\u043E\\u0433\\u043D\\u043E\\u0437 \\u043F\\u043E\\u0433\\u043E\\u0434\\u0438\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  width: '100%',\n                  height: 300\n                },\n                children: /*#__PURE__*/_jsxDEV(LineChart, {\n                  width: 800,\n                  height: 300,\n                  data: forecast,\n                  margin: {\n                    top: 5,\n                    right: 30,\n                    left: 20,\n                    bottom: 5\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                    strokeDasharray: \"3 3\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 196,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                    dataKey: \"date\",\n                    tickFormatter: date => new Date(date).toLocaleDateString()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 197,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 201,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 202,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 203,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Line, {\n                    type: \"monotone\",\n                    dataKey: \"temperature\",\n                    stroke: theme.palette.primary.main,\n                    name: \"\\u0422\\u0435\\u043C\\u043F\\u0435\\u0440\\u0430\\u0442\\u0443\\u0440\\u0430\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 204,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Line, {\n                    type: \"monotone\",\n                    dataKey: \"humidity\",\n                    stroke: theme.palette.secondary.main,\n                    name: \"\\u0412\\u043E\\u043B\\u043E\\u0433\\u0456\\u0441\\u0442\\u044C\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 210,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"e1V0xNNgp/kyX8ABr6WjtKdDZY8=\", false, function () {\n  return [useTheme];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Box","Button","Card","CardContent","CardHeader","Container","Grid","TextField","Typography","CircularProgress","useTheme","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","WbSunny","SunIcon","CloudCircle","CloudIcon","Water","WaterIcon","Air","WindIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","_s","theme","city","setCity","searchCity","setSearchCity","currentWeather","setCurrentWeather","forecast","setForecast","loading","setLoading","error","setError","detectLocation","navigator","geolocation","getCurrentPosition","position","response","fetch","coords","latitude","longitude","data","json","detectedCity","address","town","village","err","console","fetchWeatherData","weatherResponse","forecastResponse","ok","Error","weatherData","forecastData","message","getWeatherIcon","temp","color","fileName","_jsxFileName","lineNumber","columnNumber","maxWidth","sx","py","backgroundColor","palette","background","default","children","container","spacing","item","xs","elevation","paper","borderRadius","display","gap","alignItems","label","value","onChange","e","target","fullWidth","variant","onClick","disabled","height","size","justifyContent","light","md","title","avatar","temperature","mb","humidity","windSpeed","width","margin","top","right","left","bottom","strokeDasharray","dataKey","tickFormatter","date","Date","toLocaleDateString","type","stroke","primary","main","name","secondary","_c","$RefreshReg$"],"sources":["D:/3KNU/kursova/weather-agriculture-app/client/src/pages/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { \r\n  Box,\r\n  Button,\r\n  Card, \r\n  CardContent, \r\n  CardHeader,\r\n  Container,\r\n  Grid,\r\n  TextField,\r\n  Typography,\r\n  CircularProgress,\r\n  useTheme\r\n} from '@mui/material';\r\nimport { \r\n  LineChart, \r\n  Line, \r\n  XAxis, \r\n  YAxis, \r\n  CartesianGrid, \r\n  Tooltip, \r\n  Legend \r\n} from 'recharts';\r\nimport { \r\n  WbSunny as SunIcon,\r\n  CloudCircle as CloudIcon,\r\n  Water as WaterIcon,\r\n  Air as WindIcon\r\n} from '@mui/icons-material';\r\n\r\nfunction Dashboard() {\r\n  const theme = useTheme();\r\n  const [city, setCity] = useState('Київ');\r\n  const [searchCity, setSearchCity] = useState('Київ');\r\n  const [currentWeather, setCurrentWeather] = useState(null);\r\n  const [forecast, setForecast] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n\r\n  const detectLocation = () => {\r\n    if (\"geolocation\" in navigator) {\r\n      navigator.geolocation.getCurrentPosition(\r\n        async (position) => {\r\n          try {\r\n            const response = await fetch(\r\n              `https://nominatim.openstreetmap.org/reverse?format=json&lat=${position.coords.latitude}&lon=${position.coords.longitude}&zoom=10&addressdetails=1`\r\n            );\r\n            const data = await response.json();\r\n            \r\n            const detectedCity = \r\n              data.address.city || \r\n              data.address.town || \r\n              data.address.village || \r\n              'Київ';\r\n\r\n            setCity(detectedCity);\r\n            setSearchCity(detectedCity);\r\n          } catch (err) {\r\n            console.error('Помилка визначення міста:', err);\r\n          }\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  const fetchWeatherData = async () => {\r\n    setLoading(true);\r\n    setError('');\r\n    \r\n    try {\r\n      const weatherResponse = await fetch(`http://localhost:5000/api/weather/current/${searchCity}`);\r\n      const forecastResponse = await fetch(`http://localhost:5000/api/weather/forecast/${searchCity}`);\r\n      \r\n      if (!weatherResponse.ok || !forecastResponse.ok) {\r\n        throw new Error('Помилка отримання даних');\r\n      }\r\n      \r\n      const weatherData = await weatherResponse.json();\r\n      const forecastData = await forecastResponse.json();\r\n      \r\n      setCurrentWeather(weatherData);\r\n      setForecast(forecastData);\r\n      setCity(searchCity);\r\n      setLoading(false);\r\n    } catch (err) {\r\n      console.error('Помилка:', err);\r\n      setError(err.message || 'Помилка отримання даних погоди');\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    detectLocation();\r\n    fetchWeatherData();\r\n  }, []);\r\n\r\n  const getWeatherIcon = (temp) => {\r\n    if (temp < 10) return <CloudIcon color=\"secondary\" />;\r\n    if (temp > 25) return <SunIcon color=\"warning\" />;\r\n    return <CloudIcon color=\"primary\" />;\r\n  };\r\n\r\n  return (\r\n    <Container maxWidth=\"xl\" sx={{ \r\n      py: 4,\r\n      backgroundColor: theme.palette.background.default \r\n    }}>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12}>\r\n          <Card elevation={6} sx={{ \r\n            backgroundColor: theme.palette.background.paper,\r\n            borderRadius: 2 \r\n          }}>\r\n            <CardContent>\r\n              <Box display=\"flex\" gap={2} alignItems=\"center\">\r\n                <TextField\r\n                  label=\"Введіть місто\"\r\n                  value={searchCity}\r\n                  onChange={(e) => setSearchCity(e.target.value)}\r\n                  fullWidth\r\n                  variant=\"outlined\"\r\n                />\r\n                <Button \r\n                  variant=\"contained\" \r\n                  color=\"primary\"\r\n                  onClick={fetchWeatherData}\r\n                  disabled={loading}\r\n                  sx={{ height: '56px' }}\r\n                >\r\n                  {loading ? <CircularProgress size={24} /> : 'Пошук'}\r\n                </Button>\r\n              </Box>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n        {loading ? (\r\n          <Grid item xs={12} display=\"flex\" justifyContent=\"center\">\r\n            <CircularProgress />\r\n          </Grid>\r\n        ) : error ? (\r\n          <Grid item xs={12}>\r\n            <Card elevation={6} sx={{ backgroundColor: theme.palette.error.light }}>\r\n              <CardContent>\r\n                <Typography color=\"error\">{error}</Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        ) : currentWeather && (\r\n          <>\r\n            <Grid item xs={12} md={4}>\r\n              <Card elevation={6} sx={{ \r\n                height: '100%',\r\n                backgroundColor: theme.palette.background.paper \r\n              }}>\r\n                <CardHeader \r\n                  title={`Погода в ${city}`}\r\n                  avatar={getWeatherIcon(currentWeather.temperature)}\r\n                />\r\n                <CardContent>\r\n                  <Box display=\"flex\" alignItems=\"center\" gap={2} mb={2}>\r\n                    <Typography variant=\"h4\">\r\n                      {currentWeather.temperature}°C\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box display=\"flex\" alignItems=\"center\" gap={2} mb={1}>\r\n                    <WaterIcon color=\"primary\" />\r\n                    <Typography>\r\n                      Вологість: {currentWeather.humidity}%\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box display=\"flex\" alignItems=\"center\" gap={2}>\r\n                    <WindIcon color=\"secondary\" />\r\n                    <Typography>\r\n                      Вітер: {currentWeather.windSpeed} км/год\r\n                    </Typography>\r\n                  </Box>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n\r\n            <Grid item xs={12} md={8}>\r\n              <Card elevation={6} sx={{ \r\n                height: '100%',\r\n                backgroundColor: theme.palette.background.paper \r\n              }}>\r\n                <CardHeader title=\"Прогноз погоди\" />\r\n                <CardContent>\r\n                  <Box sx={{ width: '100%', height: 300 }}>\r\n                    <LineChart\r\n                      width={800}\r\n                      height={300}\r\n                      data={forecast}\r\n                      margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\r\n                    >\r\n                      <CartesianGrid strokeDasharray=\"3 3\" />\r\n                      <XAxis \r\n                        dataKey=\"date\" \r\n                        tickFormatter={(date) => new Date(date).toLocaleDateString()}\r\n                      />\r\n                      <YAxis />\r\n                      <Tooltip />\r\n                      <Legend />\r\n                      <Line \r\n                        type=\"monotone\" \r\n                        dataKey=\"temperature\" \r\n                        stroke={theme.palette.primary.main}\r\n                        name=\"Температура\"\r\n                      />\r\n                      <Line \r\n                        type=\"monotone\" \r\n                        dataKey=\"humidity\" \r\n                        stroke={theme.palette.secondary.main}\r\n                        name=\"Вологість\"\r\n                      />\r\n                    </LineChart>\r\n                  </Box>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n          </>\r\n        )}\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}