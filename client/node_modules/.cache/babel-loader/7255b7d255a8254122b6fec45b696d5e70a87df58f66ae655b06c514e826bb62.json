{"ast":null,"code":"var _jsxFileName = \"D:\\\\3KNU\\\\kursova\\\\weather-agriculture-app\\\\client\\\\src\\\\components\\\\WeatherMiniCard.js\";\nimport React from 'react';\nimport { Box, Typography, Card, CardContent } from '@mui/material';\nimport { WbSunny as SunIcon, Cloud as CloudIcon } from '@mui/icons-material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeatherMiniCard = ({\n  date,\n  minTemp,\n  maxTemp,\n  condition = 'cloudy'\n}) => {\n  const getWeatherIcon = () => {\n    switch (condition) {\n      case 'sunny':\n        return /*#__PURE__*/_jsxDEV(SunIcon, {\n          sx: {\n            fontSize: 40,\n            color: '#FFC107'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 16\n        }, this);\n      case 'cloudy':\n      default:\n        return /*#__PURE__*/_jsxDEV(CloudIcon, {\n          sx: {\n            fontSize: 40,\n            color: '#9E9E9E'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      width: 150,\n      borderRadius: 2,\n      boxShadow: 2,\n      backgroundColor: '#f5f5f5'\n    },\n    children: /*#__PURE__*/_jsxDEV(CardContent, {\n      sx: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        p: 1.5\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        fontWeight: \"bold\",\n        children: date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        my: 1,\n        children: getWeatherIcon()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        gap: 1,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"caption\",\n          color: \"text.secondary\",\n          children: [\"\\u041C\\u0456\\u043D. \", minTemp, \"\\xB0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"caption\",\n          color: \"text.primary\",\n          fontWeight: \"bold\",\n          children: [\"\\u041C\\u0430\\u043A\\u0441. \", maxTemp, \"\\xB0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_c = WeatherMiniCard;\nexport default WeatherMiniCard;\nvar _c;\n$RefreshReg$(_c, \"WeatherMiniCard\");","map":{"version":3,"names":["React","Box","Typography","Card","CardContent","WbSunny","SunIcon","Cloud","CloudIcon","jsxDEV","_jsxDEV","WeatherMiniCard","date","minTemp","maxTemp","condition","getWeatherIcon","sx","fontSize","color","fileName","_jsxFileName","lineNumber","columnNumber","width","borderRadius","boxShadow","backgroundColor","children","display","flexDirection","alignItems","p","variant","fontWeight","my","justifyContent","gap","_c","$RefreshReg$"],"sources":["D:/3KNU/kursova/weather-agriculture-app/client/src/components/WeatherMiniCard.js"],"sourcesContent":["import React from 'react';\r\nimport { \r\n  Box, \r\n  Typography, \r\n  Card, \r\n  CardContent \r\n} from '@mui/material';\r\nimport { WbSunny as SunIcon, Cloud as CloudIcon } from '@mui/icons-material';\r\n\r\nconst WeatherMiniCard = ({ \r\n  date, \r\n  minTemp, \r\n  maxTemp, \r\n  condition = 'cloudy' \r\n}) => {\r\n  const getWeatherIcon = () => {\r\n    switch(condition) {\r\n      case 'sunny': \r\n        return <SunIcon sx={{ fontSize: 40, color: '#FFC107' }} />;\r\n      case 'cloudy': \r\n      default: \r\n        return <CloudIcon sx={{ fontSize: 40, color: '#9E9E9E' }} />;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card \r\n      sx={{ \r\n        width: 150, \r\n        borderRadius: 2, \r\n        boxShadow: 2,\r\n        backgroundColor: '#f5f5f5'\r\n      }}\r\n    >\r\n      <CardContent \r\n        sx={{ \r\n          display: 'flex', \r\n          flexDirection: 'column', \r\n          alignItems: 'center', \r\n          p: 1.5 \r\n        }}\r\n      >\r\n        <Typography variant=\"subtitle1\" fontWeight=\"bold\">\r\n          {date}\r\n        </Typography>\r\n        \r\n        <Box my={1}>\r\n          {getWeatherIcon()}\r\n        </Box>\r\n        \r\n        <Box \r\n          display=\"flex\" \r\n          justifyContent=\"center\" \r\n          alignItems=\"center\" \r\n          gap={1}\r\n        >\r\n          <Typography variant=\"caption\" color=\"text.secondary\">\r\n            Мін. {minTemp}°\r\n          </Typography>\r\n          <Typography variant=\"caption\" color=\"text.primary\" fontWeight=\"bold\">\r\n            Макс. {maxTemp}°\r\n          </Typography>\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default WeatherMiniCard;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACEC,GAAG,EACHC,UAAU,EACVC,IAAI,EACJC,WAAW,QACN,eAAe;AACtB,SAASC,OAAO,IAAIC,OAAO,EAAEC,KAAK,IAAIC,SAAS,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7E,MAAMC,eAAe,GAAGA,CAAC;EACvBC,IAAI;EACJC,OAAO;EACPC,OAAO;EACPC,SAAS,GAAG;AACd,CAAC,KAAK;EACJ,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3B,QAAOD,SAAS;MACd,KAAK,OAAO;QACV,oBAAOL,OAAA,CAACJ,OAAO;UAACW,EAAE,EAAE;YAAEC,QAAQ,EAAE,EAAE;YAAEC,KAAK,EAAE;UAAU;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAC5D,KAAK,QAAQ;MACb;QACE,oBAAOb,OAAA,CAACF,SAAS;UAACS,EAAE,EAAE;YAAEC,QAAQ,EAAE,EAAE;YAAEC,KAAK,EAAE;UAAU;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;IAChE;EACF,CAAC;EAED,oBACEb,OAAA,CAACP,IAAI;IACHc,EAAE,EAAE;MACFO,KAAK,EAAE,GAAG;MACVC,YAAY,EAAE,CAAC;MACfC,SAAS,EAAE,CAAC;MACZC,eAAe,EAAE;IACnB,CAAE;IAAAC,QAAA,eAEFlB,OAAA,CAACN,WAAW;MACVa,EAAE,EAAE;QACFY,OAAO,EAAE,MAAM;QACfC,aAAa,EAAE,QAAQ;QACvBC,UAAU,EAAE,QAAQ;QACpBC,CAAC,EAAE;MACL,CAAE;MAAAJ,QAAA,gBAEFlB,OAAA,CAACR,UAAU;QAAC+B,OAAO,EAAC,WAAW;QAACC,UAAU,EAAC,MAAM;QAAAN,QAAA,EAC9ChB;MAAI;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACK,CAAC,eAEbb,OAAA,CAACT,GAAG;QAACkC,EAAE,EAAE,CAAE;QAAAP,QAAA,EACRZ,cAAc,CAAC;MAAC;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACd,CAAC,eAENb,OAAA,CAACT,GAAG;QACF4B,OAAO,EAAC,MAAM;QACdO,cAAc,EAAC,QAAQ;QACvBL,UAAU,EAAC,QAAQ;QACnBM,GAAG,EAAE,CAAE;QAAAT,QAAA,gBAEPlB,OAAA,CAACR,UAAU;UAAC+B,OAAO,EAAC,SAAS;UAACd,KAAK,EAAC,gBAAgB;UAAAS,QAAA,GAAC,sBAC9C,EAACf,OAAO,EAAC,MAChB;QAAA;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eACbb,OAAA,CAACR,UAAU;UAAC+B,OAAO,EAAC,SAAS;UAACd,KAAK,EAAC,cAAc;UAACe,UAAU,EAAC,MAAM;UAAAN,QAAA,GAAC,4BAC7D,EAACd,OAAO,EAAC,MACjB;QAAA;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEX,CAAC;AAACe,EAAA,GAzDI3B,eAAe;AA2DrB,eAAeA,eAAe;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}