{"ast":null,"code":"var _jsxFileName = \"D:\\\\3KNU\\\\kursova\\\\weather-agriculture-app\\\\client\\\\src\\\\components\\\\HourlyForecast.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Typography, Grid, Paper, Box, useMediaQuery, useTheme } from '@mui/material';\n\n// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è —á–∞—Å—É\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formatTime = date => {\n  return date.toLocaleTimeString('uk-UA', {\n    hour: '2-digit',\n    minute: '2-digit'\n  });\n};\n\n// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤–∏–∑–Ω–∞—á–µ–Ω–Ω—è —ñ–∫–æ–Ω–∫–∏ –ø–æ–≥–æ–¥–∏\nconst getWeatherIcon = description => {\n  const lowerDescription = description.toLowerCase();\n  if (lowerDescription.includes('sun') || lowerDescription.includes('clear')) {\n    return '‚òÄÔ∏è';\n  }\n  if (lowerDescription.includes('cloud')) {\n    return '‚òÅÔ∏è';\n  }\n  if (lowerDescription.includes('rain')) {\n    return 'üåßÔ∏è';\n  }\n  if (lowerDescription.includes('snow')) {\n    return '‚ùÑÔ∏è';\n  }\n  return 'üå§Ô∏è'; // –ó–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º\n};\nfunction HourlyForecast({\n  city\n}) {\n  _s();\n  const [hourlyForecast, setHourlyForecast] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const theme = useTheme();\n  const isSmallScreen = useMediaQuery(theme.breakpoints.down('sm'));\n  useEffect(() => {\n    const fetchHourlyForecast = async () => {\n      if (!city) return;\n      setLoading(true);\n      setError(null);\n      try {\n        const response = await fetch(`http://localhost:5000/api/weather/hourly/${city}`);\n        if (!response.ok) {\n          const errorData = await response.json();\n          throw new Error(errorData.error || '–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –ø–æ–≥–æ–¥–∏–Ω–Ω–æ–≥–æ –ø—Ä–æ–≥–Ω–æ–∑—É');\n        }\n        const data = await response.json();\n        setHourlyForecast(data);\n      } catch (err) {\n        console.error('–ü–æ–º–∏–ª–∫–∞:', err);\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchHourlyForecast();\n  }, [city]);\n  if (loading) return /*#__PURE__*/_jsxDEV(Typography, {\n    children: \"\\u0417\\u0430\\u0432\\u0430\\u043D\\u0442\\u0430\\u0436\\u0435\\u043D\\u043D\\u044F...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(Typography, {\n    color: \"error\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 21\n  }, this);\n  if (!hourlyForecast.length) return null;\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    sx: {\n      p: 2,\n      mt: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: \"\\u041F\\u043E\\u0433\\u043E\\u0434\\u0438\\u043D\\u043D\\u0438\\u0439 \\u043F\\u0440\\u043E\\u0433\\u043D\\u043E\\u0437\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: isSmallScreen ? 1 : 2,\n      justifyContent: \"center\",\n      children: hourlyForecast.map((hourData, index) => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 4,\n        sm: 3,\n        md: 2,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          elevation: 3,\n          sx: {\n            p: 1,\n            textAlign: 'center',\n            bgcolor: 'background.default'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle2\",\n            children: formatTime(new Date(hourData.time))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              fontSize: '2rem',\n              my: 1\n            },\n            children: getWeatherIcon(hourData.description)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            children: [Math.round(hourData.temperature), \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"caption\",\n            color: \"text.secondary\",\n            children: hourData.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n_s(HourlyForecast, \"r8jDBFX8p4UwYxE9BQUz6JlUscE=\", false, function () {\n  return [useTheme, useMediaQuery];\n});\n_c = HourlyForecast;\nexport default HourlyForecast;\nvar _c;\n$RefreshReg$(_c, \"HourlyForecast\");","map":{"version":3,"names":["React","useState","useEffect","Typography","Grid","Paper","Box","useMediaQuery","useTheme","jsxDEV","_jsxDEV","formatTime","date","toLocaleTimeString","hour","minute","getWeatherIcon","description","lowerDescription","toLowerCase","includes","HourlyForecast","city","_s","hourlyForecast","setHourlyForecast","loading","setLoading","error","setError","theme","isSmallScreen","breakpoints","down","fetchHourlyForecast","response","fetch","ok","errorData","json","Error","data","err","console","message","children","fileName","_jsxFileName","lineNumber","columnNumber","color","length","sx","p","mt","variant","gutterBottom","container","spacing","justifyContent","map","hourData","index","item","xs","sm","md","elevation","textAlign","bgcolor","Date","time","fontSize","my","Math","round","temperature","_c","$RefreshReg$"],"sources":["D:/3KNU/kursova/weather-agriculture-app/client/src/components/HourlyForecast.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { \r\n  Typography, \r\n  Grid, \r\n  Paper, \r\n  Box, \r\n  useMediaQuery, \r\n  useTheme \r\n} from '@mui/material';\r\n\r\n// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è —á–∞—Å—É\r\nconst formatTime = (date) => {\r\n  return date.toLocaleTimeString('uk-UA', { \r\n    hour: '2-digit', \r\n    minute: '2-digit' \r\n  });\r\n};\r\n\r\n// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤–∏–∑–Ω–∞—á–µ–Ω–Ω—è —ñ–∫–æ–Ω–∫–∏ –ø–æ–≥–æ–¥–∏\r\nconst getWeatherIcon = (description) => {\r\n  const lowerDescription = description.toLowerCase();\r\n  \r\n  if (lowerDescription.includes('sun') || lowerDescription.includes('clear')) {\r\n    return '‚òÄÔ∏è';\r\n  }\r\n  \r\n  if (lowerDescription.includes('cloud')) {\r\n    return '‚òÅÔ∏è';\r\n  }\r\n  \r\n  if (lowerDescription.includes('rain')) {\r\n    return 'üåßÔ∏è';\r\n  }\r\n  \r\n  if (lowerDescription.includes('snow')) {\r\n    return '‚ùÑÔ∏è';\r\n  }\r\n  \r\n  return 'üå§Ô∏è'; // –ó–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º\r\n};\r\n\r\nfunction HourlyForecast({ city }) {\r\n  const [hourlyForecast, setHourlyForecast] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  const theme = useTheme();\r\n  const isSmallScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n  useEffect(() => {\r\n    const fetchHourlyForecast = async () => {\r\n      if (!city) return;\r\n\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      try {\r\n        const response = await fetch(`http://localhost:5000/api/weather/hourly/${city}`);\r\n        \r\n        if (!response.ok) {\r\n          const errorData = await response.json();\r\n          throw new Error(errorData.error || '–ü–æ–º–∏–ª–∫–∞ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –ø–æ–≥–æ–¥–∏–Ω–Ω–æ–≥–æ –ø—Ä–æ–≥–Ω–æ–∑—É');\r\n        }\r\n        \r\n        const data = await response.json();\r\n        setHourlyForecast(data);\r\n      } catch (err) {\r\n        console.error('–ü–æ–º–∏–ª–∫–∞:', err);\r\n        setError(err.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchHourlyForecast();\r\n  }, [city]);\r\n\r\n  if (loading) return <Typography>–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...</Typography>;\r\n  if (error) return <Typography color=\"error\">{error}</Typography>;\r\n  if (!hourlyForecast.length) return null;\r\n\r\n  return (\r\n    <Paper sx={{ p: 2, mt: 2 }}>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        –ü–æ–≥–æ–¥–∏–Ω–Ω–∏–π –ø—Ä–æ–≥–Ω–æ–∑\r\n      </Typography>\r\n      <Grid \r\n        container \r\n        spacing={isSmallScreen ? 1 : 2} \r\n        justifyContent=\"center\"\r\n      >\r\n        {hourlyForecast.map((hourData, index) => (\r\n          <Grid item xs={4} sm={3} md={2} key={index}>\r\n            <Paper \r\n              elevation={3} \r\n              sx={{ \r\n                p: 1, \r\n                textAlign: 'center', \r\n                bgcolor: 'background.default' \r\n              }}\r\n            >\r\n              <Typography variant=\"subtitle2\">\r\n                {formatTime(new Date(hourData.time))}\r\n              </Typography>\r\n              <Box sx={{ fontSize: '2rem', my: 1 }}>\r\n                {getWeatherIcon(hourData.description)}\r\n              </Box>\r\n              <Typography variant=\"body2\">\r\n                {Math.round(hourData.temperature)}¬∞C\r\n              </Typography>\r\n              <Typography variant=\"caption\" color=\"text.secondary\">\r\n                {hourData.description}\r\n              </Typography>\r\n            </Paper>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default HourlyForecast;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}